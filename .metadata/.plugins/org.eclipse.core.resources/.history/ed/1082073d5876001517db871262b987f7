<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
	pageEncoding="ISO-8859-1"
%>
<%@page import="java.text.NumberFormat"%>
<%@page import=" java.text.DecimalFormat"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Home Page</title>
<script type="text/javascript"
	src="http://maps.google.com/maps/api/js?sensor=false"
></script>
<link rel="stylesheet" href="./css/styles.css" type="text/css">
<script src="./js/amcharts.js" type="text/javascript"></script>
<script src="./js/serial.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript"
	src="js/AdvancedMap.js"
></script>
<link rel="stylesheet" href="css/homestyle.css">
<script>
			<%float dep=(int)session.getAttribute("dep")/(Float)session.getAttribute("distance");
			float intres=(Float)session.getAttribute("intres")/(Float)session.getAttribute("distance");
			float sal=(Float)session.getAttribute("salr")/(Float)session.getAttribute("distance");
			float insu=(Float)session.getAttribute("insu")/(Float)session.getAttribute("distance") ;
			float road=(Float)session.getAttribute("rota")/(Float)session.getAttribute("distance");
			 %>
			var Depreciation=<%=dep %>; 
			var Interest=<%=intres %>; 				
			var Salary=<%=sal%>;
			var cost=0;
			var Insurance=<%=insu %>;
			var Roadtax=<%=road %>;
			var Others=0;
			var Total=Depreciation+Interest+Salary+cost+Insurance+Roadtax+Others;
			
			
			var Diesel=<%=session.getAttribute("dies") %>;
			var toll=<%=session.getAttribute("tole") %>;
			var tyre=<%=session.getAttribute("tyres") %>;
			var	route=<%=session.getAttribute("routes") %>;
			var cost=<%=session.getAttribute("maint") %>;
			var total1=Diesel+toll+tyre+route+cost;
			
			var chart, chart1;
            
			var chartData = [
                {
                    "name": "Depre<br>ciation",
                    "open": 0,
                    "close": Depreciation,
                    "color": "#0D47A1",
                    "balloonValue": Depreciation
                },
                {
                    "name": "Interest<br>Cost",
                    "open": Depreciation,
                    "close":Depreciation+Interest,
                    "color": "#0D47A1",
                    "balloonValue": Interest
                },
                {
                    "name": "Driver/<br>Cleaner<br>Salary",
                    "open":Depreciation+Interest,
                    "close": Depreciation+Interest+Salary,
                    "color": "#0D47A1",
                    "balloonValue": Salary
                },
              	{
                    "name": "Insurance",
                    "open": Depreciation+Interest+Salary,
                    "close": Depreciation+Interest+Salary+Insurance,
                    "color": "#0D47A1",
                    "balloonValue": Insurance
                },
				{
                    "name": "Road<br>Tax<br>(Including<br>Fitness)",
                    "open": Depreciation+Interest+Salary+Insurance,
                    "close": Depreciation+Interest+Salary+Insurance+Roadtax,
                    "color": "#0D47A1",
                    "balloonValue": Roadtax
                },
				{
                    "name": "Others",
                    "open": Depreciation+Interest+Salary+Insurance+Roadtax,
                    "close": Depreciation+Interest+Salary+Insurance+Roadtax+Others,
                    "color": "#0D47A1",
                    "balloonValue": Others
                },
				{
                    "name": "Total",
                    "open": 0,
                    "close": Depreciation+Interest+Salary+Insurance+Roadtax+Others,
                    "color": "#1A237E",
                    "balloonValue": Total
                },
            ];
				
				var chartD = [
                {
                    "name": "Diesel<br>Cost",
                    "open": 0,
                    "close": Diesel,
                    "color": "#0D47A1",
                    "balloonValue": Diesel
                },
                {
                    "name": "Toll<br>expenses",
                    "open": Diesel,
                    "close":Diesel+toll,
                    "color": "#0D47A1",
                    "balloonValue": toll
                },
                {
                    "name": "Tyre<br>Cost",
                    "open":Diesel+toll,
                    "close": Diesel+toll+tyre,
                    "color": "#0D47A1",
                    "balloonValue": tyre
                },
                {
                    "name": "Route<br>Expenses",
                    "open": Diesel+toll+tyre,
                    "close": Diesel+toll+tyre+route,
                    "color": "#0D47A1",
                    "balloonValue": route
                },
				{
                    "name": "Maintanence<br>Cost",
                    "open": Diesel+toll+tyre+route,
                    "close": Diesel+toll+tyre+route+cost,
                    "color": "#0D47A1",
                    "balloonValue": cost
                },
				{
                    "name": "Total",
                    "open": 0,
                    "close": Diesel+toll+tyre+route+cost,
                    "color": "#1A237E",
                    "balloonValue": total1
                },
            ];

            AmCharts.ready(function () {
                // Waterfall chart is a simple serial chart with some specific settings
                chart = new AmCharts.AmSerialChart();
                chart.dataProvider = chartData;
                chart.categoryField = "name";
                chart.columnWidth = .6;
                chart.startDuration = 1;
				
				chart1 = new AmCharts.AmSerialChart();
                chart1.dataProvider = chartD;
                chart1.categoryField = "name";
                chart1.columnWidth = .6;
                chart1.startDuration = 1;

                // AXES
                // Category
                var categoryAxis = chart.categoryAxis;
                categoryAxis.gridAlpha = 0.1;
                categoryAxis.axisAlpha = 0;
                categoryAxis.gridPosition = "start";
				
				var categoryAxis1 = chart1.categoryAxis;
                categoryAxis1.gridAlpha = 0.1;
                categoryAxis1.axisAlpha = 0;
                categoryAxis1.gridPosition = "start";

                // Value
                var valueAxis = new AmCharts.ValueAxis();
                valueAxis.gridAlpha = 0.1;
                valueAxis.axisAlpha = 0;
                chart.addValueAxis(valueAxis);
				
				var valueAxis1 = new AmCharts.ValueAxis();
                valueAxis1.gridAlpha = 0.1;
                valueAxis1.axisAlpha = 0;
                chart1.addValueAxis(valueAxis1);

                // GRAPH
                var graph = new AmCharts.AmGraph();
                graph.valueField = "close";
                graph.openField = "open";
                graph.type = "column";
                graph.lineAlpha = 1;
                graph.lineColor = "#BBBBBB";
                graph.colorField = "color";
                graph.fillAlphas = 0.8;
                graph.balloonText = "<span style='color:[[color]]'> [[category]] </span><br><span style='font-size:13px;'> <b>Rs.[[balloonValue]]</b></span>";
                graph.labelText = "Rs.[[balloonValue]]";
                chart.addGraph(graph);
				
				
				var graph1 = new AmCharts.AmGraph();
                graph1.valueField = "close";
                graph1.openField = "open";
                graph1.type = "column";
                graph1.lineAlpha = 1;
                graph1.lineColor = "#BBBBBB";
                graph1.colorField = "color";
                graph1.fillAlphas = 0.8;
                graph1.balloonText = "<span style='color:[[color]]'> [[category]] </span><br><span style='font-size:13px;'> <b>Rs.[[balloonValue]]</b></span>";
                graph1.labelText = "Rs.[[balloonValue]]";
                chart1.addGraph(graph1);
                

                // WRITE
                chart.write("chartdiv");
				chart1.write("div");
            });
        </script>
</head>
<body onload="calcRoute()">
	<input type="hidden" value='<%=session.getAttribute("start") %>'
		id="start"
	>
	<input type="hidden" value='<%=session.getAttribute("backstart") %>'
		id="end"
	>
	<input type="hidden" value='<%=session.getAttribute("end") %>' id="mid">
	<div class="card">
		<header>
		<h1>CLEANSHEET</h1>
		</header>
		<p>
			Hello,
			<%= session.getAttribute( "name" ) %>
			<a style="float: right; padding-left: 5px" href="Logout">Logout</a>
		</p>
		<nav style="transform: translateZ(0);"> <a href="Auto.jsp">Auto</a>
		<br>
		<a href="home.jsp">Classic</a> <br>
		<a href="Advanced.jsp">Advanced</a> <br>
		<a href="Param.jsp">Control Panel</a> <br>
		<a href="uploadFreight.jsp">Upload Freight</a> <br>
		<a href="uploadContract.jsp">Upload Contract</a> <br>
		</nav>
		<section style="width: 45%">
		<div class="login-card">
			<h2 align="center">Transport Cleansheet Output Summary</h2>
			<table>
				<tr>
					<td>Origin City :</td>
					<td><%=session.getAttribute("start") %></td>
				</tr>
				<tr>
					<td>Destination City :</td>
					<td><%=session.getAttribute("end") %></td>
				</tr>
				<tr>
					<td>BackHaul City :</td>
					<td><%=session.getAttribute("backstart") %></td>
				</tr>
				<tr>
					<td>
						<%DecimalFormat df = new DecimalFormat("#.##");
						Float dist=(Float)session.getAttribute("distance");%> Distance Is
						(In KM) :
					</td>
					<td><%=df.format(dist) %></td>
				</tr>
				<tr>
					<td>Capacity (In Tons) :</td>
					<td><%=session.getAttribute("cap") %></td>
				</tr>
			</table>
			Fixed Cost/Month/Km
			<div id="chartdiv" style="width: 500px; height: 250px;"></div>
			Variable Cost/Km
			<div id="div" style="width: 500px; height: 250px;"></div>
		</div>
		</section>
		<div id="map_canvas" class="right" style="height: 67%; width: 35%"></div>
		<footer style="position:  relative;"> Copyright &copy
		McKinsey & Company </footer>
	</div>
</body>
</html>