/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2015-11-19 14:04:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.NumberFormat;
import java.text.DecimalFormat;

public final class AdminResultBasic_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
  	 
		if(request.getSession().getAttribute("empid")==null)
        {      request.getRequestDispatcher("index.jsp").forward(request, response);   
           }else{
 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>Output Summary</title>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://maps.google.com/maps/api/js?sensor=false\"\r\n");
      out.write("></script>\r\n");
      out.write("<script src=\"./js/amcharts.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"./js/serial.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script language=\"javascript\" type=\"text/javascript\" src=\"js/Map.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"js/jquery.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t\t\t\t\tfunction roundToTwo(num) {    \r\n");
      out.write("    return +(Math.round(num + \"e+2\")  + \"e-2\");\r\n");
      out.write("}\r\n");
      out.write("\t\t\t");

			
			float dep=Float.parseFloat((String)session.getAttribute("dep"));
			float distance=(Float)session.getAttribute("distance");
			dep=dep/distance;
			float intres=Float.parseFloat((String)session.getAttribute("intres"));
			intres=intres/distance;
			float sal=Float.parseFloat((String)session.getAttribute("salr"));
			sal=sal/distance;
			float insu=Float.parseFloat((String)session.getAttribute("insu"));
			insu=insu/distance;
			float road=Float.parseFloat((String)session.getAttribute("rota"));
			road=road/distance;
			
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar Depreciation=roundToTwo(");
      out.print(dep );
      out.write("); \r\n");
      out.write("\t\t\tvar Interest=roundToTwo(");
      out.print(intres );
      out.write("); \t\t\t\t\r\n");
      out.write("\t\t\tvar Salary=roundToTwo(");
      out.print(sal);
      out.write(");\r\n");
      out.write("\t\t\tvar cost=0;\r\n");
      out.write("\t\t\tvar Insurance=roundToTwo(");
      out.print(insu );
      out.write(");\r\n");
      out.write("\t\t\tvar Roadtax=roundToTwo(");
      out.print(road );
      out.write(");\r\n");
      out.write("\t\t\tvar Others=0;\r\n");
      out.write("\t\t\tvar Total=roundToTwo(Depreciation+Interest+Salary+cost+Insurance+Roadtax+Others);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar Diesel=roundToTwo(");
      out.print(session.getAttribute("dies") );
      out.write(");\r\n");
      out.write("\t\t\tvar toll=roundToTwo(");
      out.print(session.getAttribute("tole") );
      out.write(");\r\n");
      out.write("\t\t\tvar tyre=roundToTwo(");
      out.print(session.getAttribute("tyres") );
      out.write(");\r\n");
      out.write("\t\t\tvar\troute=roundToTwo(");
      out.print(session.getAttribute("routes") );
      out.write(");\r\n");
      out.write("\t\t\tvar cost=roundToTwo(");
      out.print(session.getAttribute("maint") );
      out.write(");\r\n");
      out.write("\t\t\tvar total1=roundToTwo(Diesel+toll+tyre+route+cost);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar chart, chart1;\r\n");
      out.write("            \r\n");
      out.write("\t\t\tvar chartData = [\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Depre<br>ciation\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": Depreciation,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": Depreciation\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Interest<br>Cost\",\r\n");
      out.write("                    \"open\": Depreciation,\r\n");
      out.write("                    \"close\":Depreciation+Interest,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": Interest\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Driver/<br>Cleaner<br>Salary\",\r\n");
      out.write("                    \"open\":Depreciation+Interest,\r\n");
      out.write("                    \"close\": Depreciation+Interest+Salary,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": Salary\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    \"name\": \"Insurance\",\r\n");
      out.write("                    \"open\": Depreciation+Interest+Salary,\r\n");
      out.write("                    \"close\": Depreciation+Interest+Salary+Insurance,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": Insurance\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    \"name\": \"Road<br>Tax<br>(Including<br>Fitness)\",\r\n");
      out.write("                    \"open\": Depreciation+Interest+Salary+Insurance,\r\n");
      out.write("                    \"close\": Depreciation+Interest+Salary+Insurance+Roadtax,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": Roadtax\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    \"name\": \"Others\",\r\n");
      out.write("                    \"open\": Depreciation+Interest+Salary+Insurance+Roadtax,\r\n");
      out.write("                    \"close\": Depreciation+Interest+Salary+Insurance+Roadtax+Others,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": Others\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    \"name\": \"Total\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": Depreciation+Interest+Salary+Insurance+Roadtax+Others,\r\n");
      out.write("                    \"color\": \"#1A237E\",\r\n");
      out.write("                    \"balloonValue\": Total\r\n");
      out.write("                },\r\n");
      out.write("            ];\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar chartD = [\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Diesel<br>Cost\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": Diesel,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": Diesel\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Toll<br>expenses\",\r\n");
      out.write("                    \"open\": Diesel,\r\n");
      out.write("                    \"close\":Diesel+toll,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": toll\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Tyre<br>Cost\",\r\n");
      out.write("                    \"open\":Diesel+toll,\r\n");
      out.write("                    \"close\": Diesel+toll+tyre,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": tyre\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Route<br>Expenses\",\r\n");
      out.write("                    \"open\": Diesel+toll+tyre,\r\n");
      out.write("                    \"close\": Diesel+toll+tyre+route,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": route\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    \"name\": \"Maintanence<br>Cost\",\r\n");
      out.write("                    \"open\": Diesel+toll+tyre+route,\r\n");
      out.write("                    \"close\": Diesel+toll+tyre+route+cost,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": cost\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    \"name\": \"Total\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": Diesel+toll+tyre+route+cost,\r\n");
      out.write("                    \"color\": \"#1A237E\",\r\n");
      out.write("                    \"balloonValue\": total1\r\n");
      out.write("                },\r\n");
      out.write("            ];\r\n");
      out.write("           \r\n");
      out.write("            AmCharts.ready(function () {\r\n");
      out.write("                // Waterfall chart is a simple serial chart with some specific settings\r\n");
      out.write("                chart = new AmCharts.AmSerialChart();\r\n");
      out.write("                chart.dataProvider = chartData;\r\n");
      out.write("                chart.categoryField = \"name\";\r\n");
      out.write("                chart.columnWidth = .6;\r\n");
      out.write("                chart.startDuration = 1;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tchart1 = new AmCharts.AmSerialChart();\r\n");
      out.write("                chart1.dataProvider = chartD;\r\n");
      out.write("                chart1.categoryField = \"name\";\r\n");
      out.write("                chart1.columnWidth = .6;\r\n");
      out.write("                chart1.startDuration = 1;\r\n");
      out.write("\r\n");
      out.write("                // AXES\r\n");
      out.write("                // Category\r\n");
      out.write("                var categoryAxis = chart.categoryAxis;\r\n");
      out.write("                categoryAxis.gridAlpha = 0.1;\r\n");
      out.write("                categoryAxis.axisAlpha = 0;\r\n");
      out.write("                categoryAxis.gridPosition = \"start\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar categoryAxis1 = chart1.categoryAxis;\r\n");
      out.write("                categoryAxis1.gridAlpha = 0.1;\r\n");
      out.write("                categoryAxis1.axisAlpha = 0;\r\n");
      out.write("                categoryAxis1.gridPosition = \"start\";\r\n");
      out.write("\r\n");
      out.write("                // Value\r\n");
      out.write("                var valueAxis = new AmCharts.ValueAxis();\r\n");
      out.write("                valueAxis.gridAlpha = 0.1;\r\n");
      out.write("                valueAxis.axisAlpha = 0;\r\n");
      out.write("                chart.addValueAxis(valueAxis);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar valueAxis1 = new AmCharts.ValueAxis();\r\n");
      out.write("                valueAxis1.gridAlpha = 0.1;\r\n");
      out.write("                valueAxis1.axisAlpha = 0;\r\n");
      out.write("                chart1.addValueAxis(valueAxis1);\r\n");
      out.write("\r\n");
      out.write("                // GRAPH\r\n");
      out.write("                var graph = new AmCharts.AmGraph();\r\n");
      out.write("                graph.valueField = \"close\";\r\n");
      out.write("                graph.openField = \"open\";\r\n");
      out.write("                graph.type = \"column\";\r\n");
      out.write("                graph.lineAlpha = 1;\r\n");
      out.write("                graph.lineColor = \"#BBBBBB\";\r\n");
      out.write("                graph.colorField = \"color\";\r\n");
      out.write("                graph.fillAlphas = 0.8;\r\n");
      out.write("                graph.balloonText = \"<span style='color:[[color]]'> [[category]] </span><br><span style='font-size:13px;'> <b>Rs.[[balloonValue]]</b></span>\";\r\n");
      out.write("                graph.labelText = \"Rs.[[balloonValue]]\";\r\n");
      out.write("                chart.addGraph(graph);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar graph1 = new AmCharts.AmGraph();\r\n");
      out.write("                graph1.valueField = \"close\";\r\n");
      out.write("                graph1.openField = \"open\";\r\n");
      out.write("                graph1.type = \"column\";\r\n");
      out.write("                graph1.lineAlpha = 1;\r\n");
      out.write("                graph1.lineColor = \"#BBBBBB\";\r\n");
      out.write("                graph1.colorField = \"color\";\r\n");
      out.write("                graph1.fillAlphas = 0.8;\r\n");
      out.write("                graph1.balloonText = \"<span style='color:[[color]]'> [[category]] </span><br><span style='font-size:13px;'> <b>Rs.[[balloonValue]]</b></span>\";\r\n");
      out.write("                graph1.labelText = \"Rs.[[balloonValue]]\";\r\n");
      out.write("                chart1.addGraph(graph1);\r\n");
      out.write("                \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("               // WRITE\r\n");
      out.write("               \tchart.write('fixed')\r\n");
      out.write("\t\t\t\tchart1.write(\"variable\");\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("<script>\t\r\n");
      out.write("\t\t\tfunction roundToTwo(num) {    \r\n");
      out.write("    return +(Math.round(num + \"e+2\")  + \"e-2\");\r\n");
      out.write("}\t\t\t\r\n");
      out.write("\t\t\tvar fixed=roundToTwo(");
      out.print(session.getAttribute("fixedkm") );
      out.write(");\r\n");
      out.write("\t\t\tvar variable=roundToTwo(");
      out.print(session.getAttribute("variablekm") );
      out.write(");\r\n");
      out.write("\t\t\tvar\tprofit=roundToTwo(");
      out.print(session.getAttribute("profitkm"));
      out.write(");\r\n");
      out.write("\t\t\tvar total=roundToTwo(fixed+variable+profit);\r\n");
      out.write("\t\t\ttotal=total.toFixed(2);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar fixed1=roundToTwo(");
      out.print(session.getAttribute("fixedton") );
      out.write(");\r\n");
      out.write("\t\t\tvar variable1=roundToTwo(");
      out.print(session.getAttribute("variableton") );
      out.write(");\r\n");
      out.write("\t\t\tvar\tprofit1=roundToTwo(");
      out.print(session.getAttribute("profitton") );
      out.write(");\r\n");
      out.write("\t\t\tvar total1=roundToTwo(fixed1+variable1+profit1);\r\n");
      out.write("\t\t\ttotal1=total1.toFixed(2);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar fixed2=roundToTwo(");
      out.print(session.getAttribute("fixedptpk") );
      out.write(");\r\n");
      out.write("\t\t\tvar variable2=roundToTwo(");
      out.print(session.getAttribute("variableptpk") );
      out.write(");\r\n");
      out.write("\t\t\tvar\tprofit2=roundToTwo(");
      out.print(session.getAttribute("profitptpk") );
      out.write(");\r\n");
      out.write("\t\t\tvar total2=roundToTwo(fixed2+variable2+profit2);\r\n");
      out.write("\t\t\ttotal2=total2.toFixed(2);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\tvar chart,chart1,chart2;\r\n");
      out.write("            var chartData = [\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Fixed<br>Cost\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": fixed,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": fixed\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Variable<br>Cost\",\r\n");
      out.write("                    \"open\": fixed,\r\n");
      out.write("                    \"close\": variable+fixed,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": variable\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Profit\",\r\n");
      out.write("                    \"open\":variable+fixed,\r\n");
      out.write("                    \"close\": profit+variable+fixed,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": profit\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Total<br>Cost\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": profit+variable+fixed,\r\n");
      out.write("                    \"color\": \"#1A237E\",\r\n");
      out.write("                    \"balloonValue\": total\r\n");
      out.write("                },\r\n");
      out.write("            ];\r\n");
      out.write("\t\t\t  var Data = [\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Fixed<br>Cost\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": fixed1,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": fixed1\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Variable<br>Cost\",\r\n");
      out.write("                    \"open\": fixed1,\r\n");
      out.write("                    \"close\": variable1+fixed1,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": variable1\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Profit\",\r\n");
      out.write("                    \"open\":variable1+fixed1,\r\n");
      out.write("                    \"close\": profit1+variable1+fixed1,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": profit1\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Total<br> Cost\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": profit1+variable1+fixed1,\r\n");
      out.write("                    \"color\": \"#1A237E\",\r\n");
      out.write("                    \"balloonValue\": total1\r\n");
      out.write("                },\r\n");
      out.write("            ];\r\n");
      out.write("\t\t\t  var cData = [\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Fixed<br>Cost\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": fixed2,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": fixed2\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Variable<br>Cost\",\r\n");
      out.write("                    \"open\": fixed2,\r\n");
      out.write("                    \"close\": variable2+fixed2,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": variable2\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Profit\",\r\n");
      out.write("                    \"open\":variable2+fixed2,\r\n");
      out.write("                    \"close\": profit2+variable2+fixed2,\r\n");
      out.write("                    \"color\": \"#0D47A1\",\r\n");
      out.write("                    \"balloonValue\": profit2\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    \"name\": \"Total<br>Cost\",\r\n");
      out.write("                    \"open\": 0,\r\n");
      out.write("                    \"close\": profit2+variable2+fixed2,\r\n");
      out.write("                    \"color\": \"#1A237E\",\r\n");
      out.write("                    \"balloonValue\": total2\r\n");
      out.write("                },\r\n");
      out.write("            ];\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            AmCharts.ready(function () {\r\n");
      out.write("                // Waterfall chart is a simple serial chart with some specific settings\r\n");
      out.write("                chart = new AmCharts.AmSerialChart();\r\n");
      out.write("                chart.dataProvider = chartData;\r\n");
      out.write("                chart.categoryField = \"name\";\r\n");
      out.write("                chart.columnWidth = 0.6;\r\n");
      out.write("                chart.startDuration = 1;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tchart1 = new AmCharts.AmSerialChart();\r\n");
      out.write("                chart1.dataProvider = Data;\r\n");
      out.write("                chart1.categoryField = \"name\";\r\n");
      out.write("                chart1.columnWidth = 0.6;\r\n");
      out.write("                chart1.startDuration = 1;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tchart2 = new AmCharts.AmSerialChart();\r\n");
      out.write("                chart2.dataProvider = cData;\r\n");
      out.write("                chart2.categoryField = \"name\";\r\n");
      out.write("                chart2.columnWidth = 0.6;\r\n");
      out.write("                chart2.startDuration = 1;\r\n");
      out.write("\r\n");
      out.write("                // AXES\r\n");
      out.write("                // Category\r\n");
      out.write("                var categoryAxis = chart.categoryAxis;\r\n");
      out.write("                categoryAxis.gridAlpha = 0.1;\r\n");
      out.write("                categoryAxis.axisAlpha = 0;\r\n");
      out.write("                categoryAxis.gridPosition = \"start\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar categoryAxis1 = chart1.categoryAxis;\r\n");
      out.write("                categoryAxis1.gridAlpha = 0.1;\r\n");
      out.write("                categoryAxis1.axisAlpha = 0;\r\n");
      out.write("                categoryAxis1.gridPosition = \"start\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar categoryAxis2 = chart2.categoryAxis;\r\n");
      out.write("                categoryAxis2.gridAlpha = 0.1;\r\n");
      out.write("                categoryAxis2.axisAlpha = 0;\r\n");
      out.write("                categoryAxis2.gridPosition = \"start\";\r\n");
      out.write("\r\n");
      out.write("                // Value\r\n");
      out.write("                var valueAxis = new AmCharts.ValueAxis();\r\n");
      out.write("                valueAxis.gridAlpha = 0.1;\r\n");
      out.write("                valueAxis.axisAlpha = 0;\r\n");
      out.write("                chart.addValueAxis(valueAxis);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar valueAxis1 = new AmCharts.ValueAxis();\r\n");
      out.write("                valueAxis1.gridAlpha = 0.1;\r\n");
      out.write("                valueAxis1.axisAlpha = 0;\r\n");
      out.write("                chart1.addValueAxis(valueAxis1);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar valueAxis2 = new AmCharts.ValueAxis();\r\n");
      out.write("                valueAxis2.gridAlpha = 0.1;\r\n");
      out.write("                valueAxis2.axisAlpha = 0;\r\n");
      out.write("                chart2.addValueAxis(valueAxis2);\r\n");
      out.write("\r\n");
      out.write("                // GRAPH\r\n");
      out.write("                var graph = new AmCharts.AmGraph();\r\n");
      out.write("                graph.valueField = \"close\";\r\n");
      out.write("                graph.openField = \"open\";\r\n");
      out.write("                graph.type = \"column\";\r\n");
      out.write("                graph.lineAlpha = 1;\r\n");
      out.write("                graph.lineColor = \"#BBBBBB\";\r\n");
      out.write("                graph.colorField = \"color\";\r\n");
      out.write("                graph.fillAlphas = 0.8;\r\n");
      out.write("                graph.balloonText = \"<span style='color:[[color]]'>[[category]]</span><br><span style='font-size:13px;'><b>Rs.[[balloonValue]]</b></span>\";\r\n");
      out.write("                graph.labelText = \"Rs.[[balloonValue]]\";\r\n");
      out.write("                chart.addGraph(graph);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar graph1 = new AmCharts.AmGraph();\r\n");
      out.write("                graph1.valueField = \"close\";\r\n");
      out.write("                graph1.openField = \"open\";\r\n");
      out.write("                graph1.type = \"column\";\r\n");
      out.write("                graph1.lineAlpha = 1;\r\n");
      out.write("                graph1.lineColor = \"#BBBBBB\";\r\n");
      out.write("                graph1.colorField = \"color\";\r\n");
      out.write("                graph1.fillAlphas = 0.8;\r\n");
      out.write("                graph1.balloonText = \"<span style='color:[[color]]'>[[category]]</span><br><span style='font-size:13px;'><b>Rs.[[balloonValue]]</b></span>\";\r\n");
      out.write("                graph1.labelText = \"Rs.[[balloonValue]]\";\r\n");
      out.write("                chart1.addGraph(graph1);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar graph2 = new AmCharts.AmGraph();\r\n");
      out.write("                graph2.valueField = \"close\";\r\n");
      out.write("                graph2.openField = \"open\";\r\n");
      out.write("                graph2.type = \"column\";\r\n");
      out.write("                graph2.lineAlpha = 1;\r\n");
      out.write("                graph2.lineColor = \"#BBBBBB\";\r\n");
      out.write("                graph2.colorField = \"color\";\r\n");
      out.write("                graph2.fillAlphas = 0.8;\r\n");
      out.write("                graph2.balloonText = \"<span style='color:[[color]]'>[[category]]</span><br><span style='font-size:13px;'><b>Rs.[[balloonValue]]</b></span>\";\r\n");
      out.write("                graph2.labelText = \"Rs.[[balloonValue]]\";\r\n");
      out.write("                chart2.addGraph(graph2);\r\n");
      out.write("\r\n");
      out.write("                // WRITE\r\n");
      out.write("                chart.write(\"chartdiv\");\r\n");
      out.write("\t\t\t\tchart1.write(\"chart\");\r\n");
      out.write("\t\t\t\tchart2.write(\"div\");\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"perkm\").innerHTML=total;\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"perton\").innerHTML=total1;\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"ptpk\").innerHTML=total2;\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"calcRoute()\" class=\"panel-body\">\r\n");
      out.write("\t<div class=\"card\">\r\n");
      out.write("\t\t<input type=\"hidden\" value='");
      out.print(session.getAttribute("start") );
      out.write("'\r\n");
      out.write("\t\t\tid=\"start\"\r\n");
      out.write("\t\t> <input type=\"hidden\" value='");
      out.print(session.getAttribute("end") );
      out.write("'\r\n");
      out.write("\t\t\tid=\"end\"\r\n");
      out.write("\t\t>\r\n");
      out.write("\t\t<header>\r\n");
      out.write("\t\t<h1 align=\"center\"><img src=\"./images/logo.jpg\" alt=\"Logo\"></h1>\r\n");
      out.write("\t\t<p style=\"text-align: left;\">\r\n");
      out.write("\t\t\tHello,\r\n");
      out.write("\t\t\t");
      out.print( session.getAttribute( "name" ) );
      out.write("\r\n");
      out.write("\t\t\t<a style=\"float: right;\" href=\"Logout\">Logout</a>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"adminAuto.jsp\">Auto</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"admin.jsp\">Classic</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"adminAdvanced.jsp\">Advanced</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"active\" class=\"dropdown\"><a class=\"dropdown-toggle\"\r\n");
      out.write("\t\t\t\t\tdata-toggle=\"dropdown\" href=\"#\"\r\n");
      out.write("\t\t\t\t>Control Panel<span class=\"caret\"></span></a>\r\n");
      out.write("\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"adminCapex.jsp\">Capex</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"adminfixed.jsp\">Fixed Cost</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"adminvariable.jsp\">Variable Cost</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"admintrip.jsp\">Trip Matrix</a></li>\r\n");
      out.write("\t\t\t\t\t\t<li><a href=\"locations.jsp\">Locations</a></li>\r\n");
      out.write("\t\t\t\t\t</ul></li>\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"adminUploadFreight.jsp\">Upload\r\n");
      out.write("\t\t\t\t\t\tFreight</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"adminUploadContract.jsp\">Upload\r\n");
      out.write("\t\t\t\t\t\tContract</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a href=\"UserSession.jsp\">User Record</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\t<section>\r\n");
      out.write("\t\t<div class=\"login-card\">\r\n");
      out.write("\t\t\t<h5 class=\"panel-header\" style=\"font-weight: bold; padding: 1%\">Result Summary For Classic</h5>\r\n");
      out.write("\t\t\t<ul class=\"nav nav-tabs\">\r\n");
      out.write("\t\t\t\t<li class=\"active\"><a data-toggle=\"tab\" href=\"#home\">Summary</a></li>\r\n");
      out.write("\t\t\t\t<li><a data-toggle=\"tab\" href=\"#menu1\">Cost/Km</a></li>\r\n");
      out.write("\t\t\t\t<li><a data-toggle=\"tab\" href=\"#menu2\">Cost/Ton</a></li>\r\n");
      out.write("\t\t\t\t<li><a data-toggle=\"tab\" href=\"#menu3\">Cost/Ton/Km</a></li>\r\n");
      out.write("\t\t\t\t<li><a data-toggle=\"tab\" href=\"#menu4\">Fixed Cost</a></li>\r\n");
      out.write("\t\t\t\t<li><a data-toggle=\"tab\" href=\"#menu5\">Variable Cost</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<div class=\"tab-content\">\r\n");
      out.write("\t\t\t\t<div id=\"home\" class=\"tab-pane fade in active\">\r\n");
      out.write("\t\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\t\tclass=\"table-responsive table table-bordered table-condensed tabel-hover\"\r\n");
      out.write("\t\t\t\t\t>\r\n");
      out.write("\t\t\t\t\t\t<table class=\"table table-bordered table-condensed tabel-hover\">\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>Origin City :</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(session.getAttribute("start") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>Destination City :</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(session.getAttribute("end") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
DecimalFormat df = new DecimalFormat("#.##");
						Float dist=(Float)session.getAttribute("distance");
      out.write(" Distance (In\r\n");
      out.write("\t\t\t\t\t\t\t\t\tKM) :\r\n");
      out.write("\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>");
      out.print(df.format(dist) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>Cost per Km (INR):</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td id=\"perkm\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>Cost per ton (INR):</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td id=\"perton\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>Cost per Km per ton (INR):</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td id=\"ptpk\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"menu1\" class=\"tab-pane fade\">\r\n");
      out.write("\t\t\t\t\t<h3>Cost/Km</h3>\r\n");
      out.write("\t\t\t\t\t<div id=\"chartdiv\" style=\"padding-left: 2%; height: 350px;\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"menu2\" class=\"tab-pane fade\">\r\n");
      out.write("\t\t\t\t\t<h3>Cost/ton</h3>\r\n");
      out.write("\t\t\t\t\t<div id=\"chart\" style=\"padding-left: 2%; height: 350px;\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"menu3\" class=\"tab-pane fade\">\r\n");
      out.write("\t\t\t\t\t<h3>Cost/Ton/Km</h3>\r\n");
      out.write("\t\t\t\t\t<div id=\"div\" style=\"padding-left: 2%; height: 350px;\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"menu4\" class=\"tab-pane fade\">\r\n");
      out.write("\t\t\t\t\t<h3>Fixed Cost/Month/Km</h3>\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t<div id=\"fixed\" style=\"padding-left: 2%; height: 250px;\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"menu5\" class=\"tab-pane fade\">\r\n");
      out.write("\t\t\t\t\t<h3>Variable Cost/Km</h3>\r\n");
      out.write("\t\t\t\t\t<div id=\"variable\" style=\"padding-left: 2%; height: 250px;\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t\t\t");
 Float cost=(Float)session.getAttribute("cost");
								int cos= cost.intValue();
								String co=NumberFormat.getNumberInstance().format(cos);
      out.write("Total\r\n");
      out.write("\t\t\t\t\tcost of trip :");
      out.print(co );
      out.write("</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t\t<div id=\"map_canvas\" class=\"right\" style=\"height: 43%\"></div>\r\n");
      out.write("\t\t<div class=\"panel-body\"></div>\r\n");
      out.write("\t\t<footer class=\"panel-footer\"\r\n");
      out.write("\t\t\tstyle=\" bottom:2%; text-align:center; color:white;position:  relative; \"\r\n");
      out.write("\t\t> Copyright &copy McKinsey & Company</footer>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
}
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
